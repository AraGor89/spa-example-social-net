{"version":3,"sources":["COMPONENTS/header/header.module.css","COMPONENTS/blog/blog.module.css","COMPONENTS/posts/notes.module.scss","reducers/postsReducer.js","reducers/toDoosReducer.js","redux-store.js","common/Preloader.jsx","hoc/withSuspence.js","COMPONENTS/menu/Menu.jsx","COMPONENTS/posts/Notes.jsx","COMPONENTS/posts/NotesContainer.jsx","COMPONENTS/header/Header.jsx","common/Lists.jsx","common/pagination.js","COMPONENTS/toDoos/ToDoos.jsx","COMPONENTS/toDoos/ToDoosContainer.jsx","COMPONENTS/blog/Blog.jsx","App.js","serviceWorker.js","index.js","api/api.js","COMPONENTS/formsControl/formsControl.module.css","COMPONENTS/menu/menu.module.css","utils/validations.js","reducers/usersReducer.js","COMPONENTS/formsControl/FormsControl.jsx"],"names":["module","exports","initialState","posts","postReducer","state","action","type","newPostText","newPost","setLoaded","loadedOrNot","doings","loaded","toDoosReducer","newDoing","totalDoingsCount","length","currentPage","reducers","combineReducers","postsReducer","usersReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Preloader","withSuspense","Component","props","Suspense","fallback","Navigation","className","style","item","to","link","activeClassName","activeLink","content","Menu","nav","maxLength10","maxLengthCreator","NewPostTextReduxForm","reduxForm","handleSubmit","reset","onSubmit","myReduxForm","Field","component","Textarea","validate","requiredField","placeholder","name","addButton","onClick","resetButton","Notes","postElements","map","p","key","Math","random","discribtionItems","postsContainer","pageTitle","alt","src","describPhoto","width","height","values","onAddPost","NotesContainer","connect","dispatch","Header","header","Lists","items","loading","post","id","title","Pagination","itemsPerPage","totalItems","paginate","checkwindowWidth","innerWidth","pageNumbers","i","ceil","push","number","ToDoos","useState","setCurrentPage","doingsPerPage","useEffect","getToDoListThunkCreator","indexOfLastPost","indexOfFirstPost","currentDoing","slice","pageNumber","ToDoosContainer","pageSize","toDoosAPI","getToDoos","then","response","data","catch","error","console","log","Blog","setLoading","setPosts","postsPerPage","postsAPI","getPosts","res","currentPost","heading","withRouterUsersContainer","React","lazy","LoginContainer","App","path","render","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","instance","axios","baseURL","get","usersAPI","getUsers","value","maxLength","users","getUsersthunkCreator","input","meta","hasError","touched","formControl","area","Input"],"mappings":"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","file":"static/js/main.de5dde18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3TT2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"blog_heading__1BoYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsContainer\":\"notes_postsContainer__1G2RP\",\"describPhoto\":\"notes_describPhoto__3oKQt\",\"myReduxForm\":\"notes_myReduxForm__Fz4cv\",\"addButton\":\"notes_addButton__2QNT3\",\"resetButton\":\"notes_resetButton__3fUI8\",\"discribtionItems\":\"notes_discribtionItems__11QKE\",\"pageTitle\":\"notes_pageTitle__3UyEO\"};","const ADD_POST = \"ADD_POST\";\r\nexport const addPostAC = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nconst initialState = {\r\n  posts: [[\"it is just a beauty\"], [\"sadness\"], [\"fresh air\"], [\"melancholy\"]],\r\n};\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.newPostText],\r\n        newPost: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","import { toDoosAPI } from \"../api/api\";\r\n\r\nconst SET_DOING = \"ADD_DOING\";\r\nconst SET_lOAD = \"SETlOAD\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const setDoingAC = (newDoing) => ({ type: SET_DOING, newDoing });\r\nexport const setLoaded = (loadedOrNot) => ({ type: SET_lOAD, loadedOrNot });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\n\r\nconst initialState = {\r\n  doings: [],\r\n  loaded: true,\r\n};\r\nconst toDoosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DOING:\r\n      return {\r\n        ...state,\r\n        doings: action.newDoing,\r\n        totalDoingsCount: action.newDoing.length,\r\n      };\r\n    case SET_lOAD:\r\n      return {\r\n        ...state,\r\n        loaded: action.loadedOrNot,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getToDoListThunkCreator = () => (dispatch) => {\r\n  dispatch(setLoaded(false));\r\n  toDoosAPI\r\n    .getToDoos()\r\n    .then((response) => {\r\n      dispatch(setLoaded(true));\r\n      dispatch(setDoingAC(response.data));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport default toDoosReducer;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport postsReducer from \"./reducers/postsReducer\";\r\nimport usersReducer from \"./reducers/usersReducer\";\r\nimport toDoosReducer from \"./reducers/toDoosReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n  postsReducer: postsReducer,\r\n  usersReducer: usersReducer,\r\n  toDoosReducer: toDoosReducer,\r\n  form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nwindow.store = store;\r\nexport default store;\r\n","import React from 'react'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div>\r\n            <h2>Loading...</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Preloader } from \"../common/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return (\r\n      <React.Suspense fallback={<Preloader />}>\r\n        <Component {...props} />\r\n      </React.Suspense>\r\n    );\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport style from \"./menu.module.css\";\r\n\r\nconst Menu = (props) => {\r\n  return (\r\n    <div className={style.nav}>\r\n      <Navigation link=\"/login\" content=\"Login\" />\r\n      <Navigation link=\"/notes\" content=\"Notes\" />\r\n      <Navigation link=\"/users\" content=\"Users\" />\r\n      <Navigation link=\"/todoos\" content=\"Doings\" />\r\n      <Navigation link=\"/hooksPosts\" content=\" My blog\" />\r\n    </div>\r\n  );\r\n};\r\nconst Navigation = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <NavLink to={props.link} activeClassName={style.activeLink}>\r\n        {props.content}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { requiredField, maxLengthCreator } from \"../../utils/validations\";\r\nimport { Textarea } from \"../formsControl/FormsControl.jsx\";\r\nimport style from \"./notes.module.scss\";\r\n\r\nconst maxLength10 = maxLengthCreator(100);\r\n\r\nconst Notes = (props) => {\r\n  let postElements = props.posts.map((p) => {\r\n    return (\r\n      <p key={Math.random()} className={style.discribtionItems}>\r\n        {p}\r\n      </p>\r\n    );\r\n  });\r\n  let addPost = (values) => {\r\n    if (values.newPostText) {\r\n      props.onAddPost(values.newPostText);\r\n    }\r\n  };\r\n  return (\r\n    <div className={style.postsContainer}>\r\n      <h1 className={style.pageTitle}>Describe this picture please</h1>\r\n      <div>\r\n        <img\r\n          alt=\"describePhoto\"\r\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQrxWCsNRVl6wIjuOiUIlXp4q89cYpN8pkVVODMYgnhz6LLqNSC\"\r\n          className={style.describPhoto}\r\n          width=\"600\"\r\n          height=\"250\"\r\n        />\r\n      </div>\r\n      <NewPostTextReduxForm onSubmit={addPost} />\r\n      <h3>All descriptions</h3>\r\n      {postElements}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NewPostTextForm = (props) => {\r\n  const { handleSubmit, reset } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit} className={style.myReduxForm}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[requiredField, maxLength10]}\r\n          placeholder=\"describe here\"\r\n          name=\"newPostText\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={style.addButton}>Add your description</button>\r\n        <button type=\"button\" onClick={reset} className={style.resetButton}>\r\n          reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst NewPostTextReduxForm = reduxForm({ form: \"newPostTextReduxForm\" })(\r\n  NewPostTextForm\r\n);\r\nexport default Notes;\r\n","import { connect } from \"react-redux\";\r\nimport Notes from \"./Notes\";\r\nimport { addPostAC } from \"../../reducers/postsReducer\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.postsReducer.posts,\r\n  newPost: state.postsReducer.newPost,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddPost(newPost) {\r\n    dispatch(addPostAC(newPost));\r\n  },\r\n});\r\nconst NotesContainer = connect(mapStateToProps, mapDispatchToProps)(Notes);\r\nexport default NotesContainer;\r\n","import React from \"react\";\r\nimport style from \"./header.module.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className={style.header}>\r\n      <h1>This is a single page application EXAMPLE</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Lists = ({ items, loading }) => {\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {items.map((post) => (\r\n        <li key={post.id} className=\"list-group-item \">\r\n          {post.title}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from \"react\";\r\n\r\nexport const Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n  const windowWidth = window.innerWidth;\r\n  const checkwindowWidth = windowWidth < 600;\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav>\r\n      <ul\r\n        className={`pagination ${checkwindowWidth ? \"pagination-sm\" : null} `}\r\n      >\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className=\"page-item\">\r\n            <a onClick={() => paginate(number)} className=\"page-link\">\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Preloader } from \"../../common/Preloader\";\r\nimport Lists from \"../../common/Lists\";\r\nimport { Pagination } from \"../../common/pagination\";\r\n\r\nconst ToDoos = (props) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [doingsPerPage] = useState(20);\r\n  useEffect(() => {\r\n    if (!props.doings.length) {\r\n      props.getToDoListThunkCreator();\r\n    }\r\n  }, []);\r\n  let x;\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * doingsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - doingsPerPage;\r\n  const currentDoing = props.doings.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  //Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 className=\"text-primary mb-3\">Doings (with redux)</h2>\r\n      {!props.loaded ? (\r\n        <Preloader />\r\n      ) : (\r\n        <div>\r\n          <Lists items={currentDoing} />\r\n          <Pagination\r\n            itemsPerPage={doingsPerPage}\r\n            totalItems={props.doings.length}\r\n            paginate={paginate}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ToDoos;\r\n","import {\r\n  getToDoListThunkCreator,\r\n  setCurrentPage,\r\n} from \"../../reducers/toDoosReducer\";\r\nimport ToDoos from \"./ToDoos\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  doings: state.toDoosReducer.doings,\r\n  loaded: state.toDoosReducer.loaded,\r\n  pageSize: state.toDoosReducer.pageSize,\r\n  totalDoingsCount: state.toDoosReducer.totalDoingsCount,\r\n  currentPage: state.toDoosReducer.currentPage,\r\n});\r\nconst ToDoosContainer = connect(mapStateToProps, {\r\n  getToDoListThunkCreator,\r\n  setCurrentPage,\r\n})(ToDoos);\r\nexport default ToDoosContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Lists from \"../../common/Lists\";\r\nimport { postsAPI } from \"../../api/api\";\r\nimport { Pagination } from \"../../common/pagination\";\r\nimport style from \"./blog.module.css\";\r\n\r\nconst Blog = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [postsPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = () => {\r\n      setLoading(true);\r\n      postsAPI.getPosts().then((res) => {\r\n        setLoading(false);\r\n        setPosts(res.data);\r\n      });\r\n    };\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPost = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  //Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className={style.heading}>My blog (with hooks)</h1>\r\n      <Lists items={currentPost} loading={loading} />\r\n      <Pagination\r\n        itemsPerPage={postsPerPage}\r\n        totalItems={posts.length}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { withSuspense } from \"./hoc/withSuspence\";\r\nimport \"./App.css\";\r\nimport Menu from \"./COMPONENTS/menu\";\r\nimport NotesContainer from \"./COMPONENTS/posts\";\r\nimport Header from \"./COMPONENTS/header\";\r\nimport ToDoosContainer from \"./COMPONENTS/toDoos\";\r\nimport Blog from \"./COMPONENTS/blog\";\r\nconst withRouterUsersContainer = React.lazy(() => import(\"./COMPONENTS/users\"));\r\nconst LoginContainer = React.lazy(() => import(\"./COMPONENTS/login\"));\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"appWrapper\">\r\n      <Header className=\"header\" />\r\n      <Menu className=\"navbar\" />\r\n      <div className=\"content\">\r\n        <Switch>\r\n          <Route path=\"/login\" component={withSuspense(LoginContainer)} />\r\n          <Route path=\"/notes\" render={() => <NotesContainer />} />\r\n          <Route\r\n            path=\"/users\"\r\n            component={withSuspense(withRouterUsersContainer)}\r\n          />\r\n          <Route path=\"/todoos\" component={() => <ToDoosContainer />} />\r\n          <Route path=\"/hooksPosts\" component={() => <Blog />} />\r\n          <Route exact path=\"/\" component={() => <NotesContainer />} />\r\n          <Route\r\n            path=\"*\"\r\n            render={() => <div className=\"notFound\"> 404 not found </div>}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport store from \"./redux-store\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\nbaseURL: \"https://jsonplaceholder.typicode.com/\",\r\n//withCredentials: true,\r\n//   headers: {\r\n//     \"API-KEY\": \"d0aff467-e9da-472a-b16b-a2e5b966588b\"\r\n//   }\r\n});\r\n\r\nexport const postsAPI = {\r\n    getPosts(){\r\n        return instance.get('posts')\r\n    }\r\n}\r\nexport const usersAPI = {\r\n    getUsers(){\r\n        return instance.get('users')\r\n    }\r\n}\r\nexport const toDoosAPI = {\r\n    getToDoos(){\r\n        return instance.get('todos')\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formsControl_formControl__D2ntR\",\"error\":\"formsControl_error__2vV-B\",\"formSummaryError\":\"formsControl_formSummaryError__M-OW4\",\"area\":\"formsControl_area__2MDjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"menu_nav__1_Dva\",\"item\":\"menu_item__1O8fF\",\"activeLink\":\"menu_activeLink__2a0DE\"};","export const requiredField = (value) =>{\r\n    if(value) return undefined;\r\n    return 'field is required';\r\n}\r\nexport const maxLengthCreator = (maxLength) =>(value) => {\r\n    if(value.length > maxLength) return `max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\nexport const required = (v) => {\r\n    if(!v || v === ''){\r\n        return 'field is required'\r\n    }return undefined\r\n}","import { usersAPI } from \"../api/api\";\r\n\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_lOAD = \"SETlOAD\";\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setLoaded = (loadedOrNot) => ({ type: SET_lOAD, loadedOrNot });\r\n\r\nconst initialState = {\r\n  users: [],\r\n  loaded: true,\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_lOAD:\r\n      return {\r\n        ...state,\r\n        loaded: action.loadedOrNot,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const getUsersthunkCreator = () => (dispatch) => {\r\n  dispatch(setLoaded(false));\r\n  usersAPI\r\n    .getUsers()\r\n    .then((response) => {\r\n      dispatch(setLoaded(true));\r\n      dispatch(setUsers(response.data));\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\nexport default usersReducer;\r\n","import React from \"react\";\r\nimport style from \"./formsControl.module.css\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n      <div>\r\n        <textarea {...input} {...props} className={style.area} />\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n      <div>\r\n        <input {...input} {...props} />\r\n      </div>\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n"],"sourceRoot":""}